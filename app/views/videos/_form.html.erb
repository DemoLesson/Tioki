<div id="upload_rules">

	<h7>Please follow these rules:</h7> <br />

	<span style="display:block;">1. I will only upload videos I created myself. 
		<a href="javascript:void(0)" class="upload_rules_toggle" data-swap-less="- Less" data-swap-more="+ More">+ More</a>
	</span>
	<ul class="upload_rules_more" style="display:none;">
		<li>• You must own or hold all necessary rights (copyrights, etc.) to your video.</li>
		<li>• "I have permission" does not mean you created it.</li>
		<li>• Public domain videos are not allowed.</li>
	</ul>


	<span style="display:block;">2. I will not upload videos intended for commercial use.
		<a href="javascript:void(0)" class="upload_rules_toggle" data-swap-less="- Less" data-swap-more="+ More">+ More</a>
	</span>
	<ul class="upload_rules_more" style="display:none;">
		<li>• Schools and businesses may not use a basic DemoLesson  account to host their videos. Schools and businesses may, however, use a <strong><a href="/forschools">School</a></strong> account to host their videos so long as they comply with the <strong><a href="/termsofservice">Terms of Service</a></strong>.</li>
		<li>• Exceptions are made for: Independent school administrators, professors, and teachers assistants, who want to promote the work they have created.</li>
		<li>• You may not upload videos containing ads that are displayed before, during, or after the video unless given prior written permission from an authorized member of the DemoLesson staff. Videos with advertisements in them will be removed.</li>
		<li>• You may not upload videos pertaining to multi-level marketing (MLM), get-rich-quick schemes, cash gifting, work-from-home businesses, or any other dubious money-making ventures.</li>
		<li>• You may not upload product promotions or sales videos such as real estate walkthroughs.</li>
		<li>• Television stations may not use DemoLesson to redistribute their programming.</li>
		<li>• We reserve the right to allow the uploading of certain commercial content for schools and businesses who have coordinated sponsored advertising campaigns or other partnerships with DemoLesson.</li>
	</ul>

	<span style="display:block;">3. I understand that certain types of content are not permitted on DemoLesson.
		<a href="javascript:void(0)" class="upload_rules_toggle" data-swap-less="- Less" data-swap-more="+ More">+ More</a>
	</span>
	<ul class="upload_rules_more" style="display:none;">
		 <li>• You may not upload sexually explicit material or pornography. Non-sexual nudity is allowed.</li>
		 <li>• You may not upload videos that incite hatred; include defamatory or discriminatory speech; or depict unlawful acts or extreme violence.</li>
		 <li>• You may post videos of yourself on TV, as long as you have permission to upload and the video depicts only your involvement in the program.</li>
		 <li>• You may not upload videos that are clips or compilations of scenes from TV programs or movies.</li>
		 <li>• You may not upload videos displaying the faces of children under the age of 13 without the expressed written consent of the parent/guardian of the child. </li>
	</ul>

	<script type="text/javascript">
	$('a.upload_rules_toggle').click(function(e) {
		e.preventDefault();
			
		if($(this).hasClass('open')) {
			$(this).removeClass('open');
			$(this).text($(this).attr('data-swap-more'));
			$(this).parent().next('.upload_rules_more').hide();
		}
		else {
			$(this).addClass('open');
			$(this).text($(this).attr('data-swap-less'));
			$(this).parent().next('.upload_rules_more').show();
		}
	
		return false;
	})
	</script>
</div>

<br /><br />

<div id="dropzone">
	<div class="bar" style="width:0%;"></div>
</div>

<form action="/me/profile/edit/upload-video" method="POST" enctype="multipart/form-data">
	<%= file_field_tag :video, :id => 'uploadVideo' %>
</form>

<em>or</em>
	
<div class="field" style="margin-top: 10px">
  <strong>Youtube or Vimeo URL</strong>
  <%= form_tag '/add_embed' do %>
	<div class="field" style="margin-top: 10px">
	  <%= text_field_tag :video_embed_url, nil, { :placeholder => "http://www.youtube.com/watch?v=RagS0Rt2BMY&feature=youtu.be", :size => 36.5 } %>
	  <%= submit_tag "Add Video", :class => "btn btn-success" %> 
	</div>
  <% end %>
</div>

<style type="text/css">
#dropzone {
	width: auto;
	border: dashed #666 2px;
	height: 40px;
	border-radius: 25px;
	padding: 4px;
}
#dropzone div.bar {
	height: 40px;
	display: block;
	background: #666;
	min-width: 40px;
	border-radius: 20px;
	line-height: 40px;
	text-align: center;
	color: #FFF;
}
input[name="video"] {
	visibility: hidden;
}
</style>

<script type="text/javascript">
$(document).ready(function(e) {
	$('#dropzone').filedrop({
		fallback_id: 'uploadVideo',   // an identifier of a standard file input element
		url: '/me/profile/edit/upload-video',              // upload handler, handles each file separately
		paramname: 'video',          // POST parameter name used on serverside to reference file
		//data: {
		//	param1: 'value1',           // send POST variables
		//	param2: function(){
		//		return calculated_data; // calculate data at time of upload
		//	},
		//},
		//headers: {          // Send additional request headers
		//	'header': 'value'
		//},
		error: function(err, file) {
			switch(err) {
				case 'BrowserNotSupported':
					alert('browser does not support html5 drag and drop')
					break;
				case 'TooManyFiles':
					alert('TooManyFiles');
					// user uploaded more than 'maxfiles'
					break;
				case 'FileTooLarge':
					alert('FileTooLarge');
					// program encountered a file whose size is greater than 'maxfilesize'
					// FileTooLarge also has access to the file which was too large
					// use file.name to reference the filename of the culprit file
					break;
				case 'FileTypeNotAllowed':
					alert('FileTypeNotAllowed');
					// The file type is not in the specified list 'allowedfiletypes'
				default:
					break;
			}
		},
		allowedfiletypes: [],   // filetypes allowed by Content-Type.  Empty array means no restrictions
		maxfiles: 1,
		maxfilesize: 200,    // max file size in MBs
		uploadStarted: function(i, file, len){
			// a file began uploading
			// i = index => 0, 1, 2, 3, 4 etc
			// file is the actual file of the index
			// len = total files user dropped
		},
		uploadFinished: function(i, file, response, time) {
			$('#dropzone div.bar').animate({"opacity": 0.5}, 500, function() {
				$(this).animate({"opacity": 1}, 500, function() {
					$(this).text('Done...');
				});
			})
			// response is the data you got back from server in JSON format.
		},
		progressUpdated: function(i, file, progress) {
			$('#dropzone div.bar').css('width', progress + '%').text(progress + '%');
			// this function is used for large files and updates intermittently
			// progress is the integer value of file being uploaded percentage to completion
		},
		speedUpdated: function(i, file, speed) {
			// speed in kb/s
		},
		afterAll: function() {
			alert('done');
			// runs after all files have been uploaded or otherwise dealt with
		}
	});
	$('#dropzone').click(function(e) {
		e.preventDefault();
		$('input#uploadVideo').click();
		return false;
	});
});
</script>