
<script type="text/javascript" src="/assets/weixiyen-jquery-filedrop-5bdee80/jquery.filedrop.js"></script>

<div id="wrapper_video_uploader" style ="background-color: transparent">
	
	<span style= "font-size:15px; margin-left: 2px; text-align: center"><strong>Please follow these simple guidelines to make video uploading easier:</strong></span></br>
	<span style= "font-size:15px; margin-left: 2px; text-align: center">1. Schools prefer it when you upload 10-15 minute video</span></br>
	<span style= "font-size:15px; margin-left: 2px; text-align: center">2. Keeping your video file size below 500MB to ensure faster uploads. <%= link_to "Need help compressing?", "http://blog.demolesson.com/video-support/video-editing-software/", :target => "_blank" %></span></br>
	<span style= "font-size:15px; margin-left: 2px; text-align: center">3. Google Chrome web browser works best with our video uploader.</span>
</div>
</br></br>

<%= direct_upload_form_for @uploader do |f| %>
  <div class="field">
	<%= f.label "Select video" %><br />
	<%= f.file_field :video %>
	<%= f.submit "Upload Video", :class => "btn btn-success" %> 
  </div>
<style>
.ui-progressbar .ui-progressbar-value { background-image: url(/assets/loader.gif);}
</style>
<div id="progressbar"></div>
  
<script>
	$(document).ready(function() {

		var form = $("#new_video_uploader");
		var data = form.toJSON();

		console.log(data);

		$("#progressbar").filedrop({
			fallback_id: 'video_uploader_video',    // an identifier of a standard file input element
			url: form.attr('action'),              // upload handler, handles each file separately
			paramname: 'video',          // POST parameter name used on serverside to reference file
			data: data,
			
			error: function(err, file) {
				switch(err) {
					case 'BrowserNotSupported':
						alert('browser does not support html5 drag and drop')
					break;
					case 'TooManyFiles':
						// user uploaded more than 'maxfiles'
					break;
					case 'FileTooLarge':
						// program encountered a file whose size is greater than 'maxfilesize'
						// FileTooLarge also has access to the file which was too large
						// use file.name to reference the filename of the culprit file
					break;
					default:
					break;
				}
			},
			allowedfiletypes: [],    // filetypes allowed by Content-Type.  Empty array means no restrictions
			maxfiles: 1,
			maxfilesize: 500,    // max file size in MBs
			progressUpdated: function(i, file, progress) {
				console.log(progress);
				$("#progressbar").progressbar({
					value: 0
				});
				$("#progressbar").progressbar({
					value: progress
				});
			},
			uploadFinished: function(i, file, response, time) {
			 // response is the data you got back from server in JSON format.
			},
			afterAll: function() {
				// runs after all files have been uploaded or otherwise dealt with
			}
		});
	});


</script>

<% end %>